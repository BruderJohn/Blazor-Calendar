@using System.Globalization
@using BlazorCalendar.Models
@using BlazorCalendar.Styles

@inherits CalendarBase

@{
    DateTime FirstDateWeek = new DateTime(FirstDate.Year, FirstDate.Month, FirstDate.Day).AddDays(-(Dates.GetNumOfDay((int)FirstDate.Date.DayOfWeek) - 2));

    string? isHidden = DisplayedView == DisplayedView.Weekly ? null : "hidden-element";
    string? CSSbackground = null;
    string? CSSToday = null;

    // The sorting must be done each time we redraw in case the user moves the spots
    if (TasksList != null)
    {
        TasksList = TasksList.OrderBy(x => x.DateStart)
                             .ThenByDescending(x => x.DateEnd).ToArray();
    }
}

<div class="@isHidden weekly-calendar" style="@Style">

    <div class=@($"{isHidden} calendar-container {Class}") style="@Style">

        @for (var i = 0; i < 7; i++)
        {
            DateTime day = FirstDateWeek.AddDays(i);

            <div class="day-column">
                @{CSSbackground = GetBackground(day);}
                <div class="header-name noselect" style="@HeaderStyle @CSSbackground">
                    @day.ToString("dddd dd.MM")
                </div>

                <div class="hour cellule">
                   
                </div>

                @for (var hour = 0; hour < 24; hour++)
                {
                    DateTime hours = day.AddHours(hour);

                    <div class="hour day-cellule">
                        @hours.ToString("HH:mm")
                    </div>
                }

            </div>

        }

    </div>


  
</div>
